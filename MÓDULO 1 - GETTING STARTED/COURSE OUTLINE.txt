



--> AGORA QUE VIMOS OS BASICS DO REACT, 

DEVEMOS 


ENTENDER O QUE VEREMOS NESSE CURSO...







---> 1A PARTE --_> GETTING STARTED







--> 2A PARTE ----> OPTIONAL ---> PROFESSOR VAI NOS MOSTRAR AS FEATURES NEXT-GEN JAVASCRIPT __MAIS IMPORTANTES___... --> quando escrevemos apps REACT, nós tipicamente usamos muitas dessas features... ---> features como ARROW FUNCTIONS e CLASSES... ---> você as usa pq isso te ajuda a escrever código REACT MAIS LIMPO E ETC.... ----> por isso devemos saber ES6 bem....






----> 3A PARTE ---> THE BASICS ----> VEMOS OS CONCEITOS BÁSICOS DO REACT --> É UM MÓDULO MUITO IMPORTANTE. ---> veremos o que são os react components, como os components se comunicam, e como um APLICATIVO REACT É CONSTRUÍDO ---> vemos também COMO PODEMOS OUTPUTTAR LISTS, OU COMO PODEMOS RENDERIZAR ALGUNS CONTEÚDOS 'CONDITIONALLY'...




----> 4A PARTE ---> DEBUGGING --> pq todos nós fazemos ERROS ---> VOCÊ TEM QUE SABER COMO ENCONTRAR ERROS, COISAS QUE FAZEM SEU APLICATIVO CRASHAR...




---> 5A PARTE --> STYLING COMPONENTS ---> COMO PODEMOS ESTILIZAR NOSSOS REACT COMPONENTS? ----> E COMO PODEMOS FAZER COM QUE UM ESTILO APLICADO A UM COMPONENT SEJA APLICADO APENAS àQUELE COMPONENT, e não a outros?




--> 6A PARTE ---> COMPONENTS DEEP DIVE ----> VEREMOS QUAL LIFE CYCLE OS STYLES SEGUEM, veremos COMO PODEMOS CONTROLAR SE O REACT DEVE PROCURAR POR UPDATES DE UM COMPONENT OU NÃO... (é um módulo importante)...




---> 7A PARTE --> HTTP REQUESTS --> COMO PODEMOS CONECTAR NOSSO APLICATIVO REACT AO MUNDO EXTERNO? COMO PODEMOS FAZER FETCH DE DADOS DE UM SERVIDOR, OU ENVIAR DADOS A UM SERVIDOR? COMO PODEMOS FAZER TUDO ISSO EM UMA SPA (single page application), ou em uma MULTI PAGE APPLICATion...? COMO FAZEMOS ISSO NESSES TIPOS DE PÁGINA, com 'ASYNC HTTP REQUESTS'...? (aqui veremos o AJAX)...




---> 8A PARTE ---> ROUTING ---> É UMA FEATURE CORE QUANDO FALAMOS DE CONSTRUÇÃO DE SINGLE PAGE APPLICATIONS... ---> com ROUTING, NÓS EFETIVAMENTE GERENCIAMOS DIFERENTES URLS, como '/users' e '/products', E RENDERIZAMOS """DIFERENTES PÁGINAS"""", EMBORA TECNICAMENTE nós tENHAMOS APENAS 1 ÚNICA PÁGINA HTML... nós temos 1 única página html E NÓS SIMPLESMENTE ___PARSEAMOS___ A URL COM O JAVASCRIPT E ENTÃO __RE-RENDERIZAMOS___ AS PARTES DO DOM QUE PRECISAM SER RE-RENDERIZADAS PARA CONSEGUIR FAZER DISPLAY DA """"NOVA PÁGINA"""" ---> isso parece bem complexo ----> é por isso que usaremos uma PACKAGE PARA ISSO. ---> routing é um conceito CHAVE. 






---> TODOS ESSES CONCEITOS SÃO MOSTRADOS COM TEORIA E EXEMPLOS, 

MAS TEREMOS O PROJETO DO HAMBURGUER PARA VER TUDO ISSO APLICADO.





---> 9a PARTE ---> FORMS E VALIDATION ---> EM QUASE QUALQUER WEBAPP QUE VOCÊ CONSTRUIR, VOCÊ TERÁ DE FAZER FETCH DOS USERINPUTS... ---> e nesse módulo, o professor vai nos mostrar COMO FAZER ISSO  DE UMA FORMA DINÂMICA, E TAMBÉM SOBRE COMO VALIDAR ESSES INPUTS..




---> 10a PARTE --> REDUX ----> VEREMOS REDUX ---> É UMA THIRD PARTY LIBRARY INDEPENDENTE, MAS É EVIDENTE QUE É USADO EM MUITOS PROJETOS REACT... ---> VEREMOS USE-CASES MAIS AVANÇADOS, como USAR 'ASYNC ACTIONS em redux', e assim por diante...







---> 11a PARTE --> AUTHENTICATION --> QUASE TODOS OS WEBAPPS PERMITEM O USUÁRIO A 'SIGN UP' E 'SIGN IN' --> professor vai focar no CLIENTSIDE, mas ele vai nos mostrar COMO SETTAR ESSE TIPO DE ENTRADA EM UM WEBAPP na parte browserside, COMO FAZER COM QUE ESSA PARTE BROWSERSIDE FUNCIONE __COM QUASE QUALQUER BACKEND__...





---> 12a PARTE ---> TESTING INTRODUCTION ---> testing é bem complexo... --> professor quer nos mostrar como TESTAR APLICATIVOS REACT...




---> 13a PARTE ---> COMO DEPLOYAR UM APP REACT....




--> 14a PARTE ---> CONTEÚDOS BÔNUS: animações, next steps e WEBPACK...







--> ANIMATIONS ---> ANIMAR REACT PROJECTS...




---> UM MÓDULO SOBRE 'NEXT.JS'' --> É BASICAMENTE uma library QUE CONSTRÓI A PARTIR DE 'REACT', 

e que FAZ 'SERVERSIDE RENDERED APPLICATIONS' muito mais tranquilas...




--> também veremos o uso do webpack com react...